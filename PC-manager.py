import telebot
import os
import subprocess
import webbrowser
from PIL import Image
from io import BytesIO
import pyautogui
import platform

# –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è!!!
BOT_TOKEN = ""  # –ó–∞–º–µ–Ω–∏ –Ω–∞ —Ç–æ–∫–µ–Ω —Å–≤–æ–µ–≥–æ –±–æ—Ç–∞
ALLOWED_USER_IDS = []  # –°–ø–∏—Å–æ–∫ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö User ID (—á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é!)
PASSWORD = "@dresny"  # –ó–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π –ø–∞—Ä–æ–ª—å
AUTHORIZED_USERS = {}  # –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–Ω–µ —Ç—Ä–æ–≥–∞—Ç—å!!!)

SCREENSHOT_PATH = "screenshot.png"  # –ü—É—Ç—å –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤
FILE_TRANSFER_FOLDER = r""  # –ü–∞–ø–∫–∞ –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ —Ñ–∞–π–ª–æ–≤ (–∏–∑ –±–æ—Ç–∞ –Ω–∞ –ü–ö) - –∑–∞–º–µ–Ω–∏!
FILE_SEND_FOLDER = r"" # –ü–∞–ø–∫–∞ –æ—Ç–∫—É–¥–∞ –±–æ—Ç –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Ñ–∞–π–ª—ã


# --- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ ---
bot = telebot.TeleBot(BOT_TOKEN)

# --- –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ü–ö --- (–û—Å—Ç–∞—é—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
def take_screenshot():
    """–î–µ–ª–∞–µ—Ç —Å–∫—Ä–∏–Ω—à–æ—Ç —ç–∫—Ä–∞–Ω–∞ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –µ–≥–æ."""
    try:
        # image = pyscreenshot.grab() #–±—ã—Å—Ç—Ä–µ–µ, –Ω–æ –Ω–µ—Ç –∫—É—Ä—Å–æ—Ä–∞
        image = pyautogui.screenshot()  # –º–µ–¥–ª–µ–Ω–Ω–µ–µ, –Ω–æ –µ—Å—Ç—å –∫—É—Ä—Å–æ—Ä
        image.save(SCREENSHOT_PATH)
        return True
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞: {e}")
        return False

def shutdown_pc():
    """–í—ã–∫–ª—é—á–∞–µ—Ç –∫–æ–º–ø—å—é—Ç–µ—Ä."""
    try:
        os.system("shutdown /s /t 1")  # Windows
        # subprocess.run(["shutdown", "-h", "now"]) #Linux
        return True
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–∫–ª—é—á–µ–Ω–∏–∏ –ü–ö: {e}")
        return False

def display_message(message):
    """–í—ã–≤–æ–¥–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ —ç–∫—Ä–∞–Ω (Windows) –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ."""
    try:
        import tkinter as tk
        import threading

        def show_message():
            """–§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –≤ tkinter."""
            root = tk.Tk()
            root.title("–°–æ–æ–±—â–µ–Ω–∏–µ")
            label = tk.Label(root, text=message, padx=20, pady=10)
            label.pack()

            def close_window():
                root.destroy()

            root.after(9000, close_window)  # –ó–∞–∫—Ä—ã—Ç—å –æ–∫–Ω–æ —á–µ—Ä–µ–∑ 9 —Å–µ–∫—É–Ω–¥

            root.mainloop()

        # –ó–∞–ø—É—Å–∫–∞–µ–º tkinter –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
        thread = threading.Thread(target=show_message)
        thread.start()

        return True
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–≤–æ–¥–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        return False

def open_link(url):
    """–û—Ç–∫—Ä—ã–≤–∞–µ—Ç —Å—Å—ã–ª–∫—É –≤ –±—Ä–∞—É–∑–µ—Ä–µ."""
    try:
        webbrowser.open(url)
        return True
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ —Å—Å—ã–ª–∫–∏: {e}")
        return False

def run_file(file_path):
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç —Ñ–∞–π–ª."""
    try:
        if platform.system() == 'Windows':
            os.startfile(file_path)  # Windows
        else:
            subprocess.Popen(['xdg-open', file_path])  # Linux/macOS
        return True
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Ñ–∞–π–ª–∞: {e}")
        return False

def display_image(image_data):
    """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–∞ —ç–∫—Ä–∞–Ω–µ –Ω–∞ 5 —Å–µ–∫—É–Ω–¥."""
    try:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º PIL –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        img = Image.open(BytesIO(image_data))

        # –ò—Å–ø–æ–ª—å–∑—É–µ–º pyautogui –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        # –°–Ω–∞—á–∞–ª–∞ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        temp_image_path = "temp_image.png"
        img.save(temp_image_path)

        # –ò—Å–ø–æ–ª—å–∑—É–µ–º tkinter –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        import tkinter as tk
        from PIL import ImageTk

        root = tk.Tk()
        root.title("–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ")

        # –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        img = ImageTk.PhotoImage(Image.open(temp_image_path))
        panel = tk.Label(root, image=img)
        panel.pack(side="bottom", fill="both", expand="yes")

        # –ó–∞–∫—Ä—ã–≤–∞–µ–º –æ–∫–Ω–æ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
        def close_window():
            root.destroy()

        root.after(5000, close_window)

        root.mainloop()

        # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        os.remove(temp_image_path)

        return True
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {e}")
        return False

# --- –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã ---
MAIN_MENU_KEYBOARD = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
MAIN_MENU_KEYBOARD.add(
    "‚öôÔ∏è –í—ã–∫–ª—é—á–µ–Ω–∏–µ –ü–ö",
    "üì¢ –í—ã–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è",
    "üóÇÔ∏è –ö–∞—Ç–µ–≥–æ—Ä–∏–∏",
    "üîô –ù–∞–∑–∞–¥"
)

CATEGORIES_KEYBOARD = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
CATEGORIES_KEYBOARD.add(
    "üì§ –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö",
    "üì• –í–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö",
    "üîô –ù–∞–∑–∞–¥"
)

GET_DATA_KEYBOARD = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
GET_DATA_KEYBOARD.add(
    "üì∏ –°–∫—Ä–∏–Ω—à–æ—Ç —ç–∫—Ä–∞–Ω–∞",
    "üì§ –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–∞–π–ª —Å –ü–ö",
    "üîô –ù–∞–∑–∞–¥"
)

INPUT_DATA_KEYBOARD = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
INPUT_DATA_KEYBOARD.add(
    "üîó –û—Ç–∫—Ä—ã—Ç—å —Å—Å—ã–ª–∫—É",
    "üíæ –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–∞–π–ª –Ω–∞ –ü–ö",
    "üñºÔ∏è –í—ã–≤–µ—Å—Ç–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ",
    "üîô –ù–∞–∑–∞–¥"
)

# --- –°–æ—Å—Ç–æ—è–Ω–∏—è ---
STATE_MAIN_MENU = "main_menu"
STATE_CATEGORIES = "categories"
STATE_GET_DATA = "get_data"
STATE_INPUT_DATA = "input_data"

USER_STATES = {}  # –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

# --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ ---
@bot.message_handler(commands=['start'])
def start(message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start."""
    user_id = message.from_user.id

    if user_id in ALLOWED_USER_IDS:
        bot.send_message(user_id, "üîí –í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–æ–º–∞–Ω–¥–∞–º:")
        bot.register_next_step_handler(message, process_password)
    else:
        bot.send_message(user_id, "üö´ –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É –±–æ—Ç—É.")

def process_password(message):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–∞—Ä–æ–ª—å –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –¥–æ—Å—Ç—É–ø –∫ –∫–æ–º–∞–Ω–¥–∞–º."""
    user_id = message.from_user.id
    password = message.text

    if password == PASSWORD:
        AUTHORIZED_USERS[user_id] = True  # –ê–≤—Ç–æ—Ä–∏–∑—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        USER_STATES[user_id] = STATE_MAIN_MENU
        show_main_menu(message)
    else:
        bot.send_message(user_id, "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ /start")

def show_main_menu(message):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é."""
    user_id = message.from_user.id
    if user_id in AUTHORIZED_USERS and AUTHORIZED_USERS[user_id]:
        msg = bot.send_message(user_id, "ü§ñ –í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É:", reply_markup=MAIN_MENU_KEYBOARD)
        delete_message(user_id, message.message_id)  # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    else:
        bot.send_message(user_id, "üö´ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –≤–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å /start")

def show_categories_menu(message):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–µ–Ω—é –∫–∞—Ç–µ–≥–æ—Ä–∏–π."""
    user_id = message.from_user.id
    if user_id in AUTHORIZED_USERS and AUTHORIZED_USERS[user_id]:
        USER_STATES[user_id] = STATE_CATEGORIES
        msg = bot.send_message(user_id, "üóÇÔ∏è –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:", reply_markup=CATEGORIES_KEYBOARD)
        delete_message(user_id, message.message_id)
    else:
        bot.send_message(user_id, "üö´ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –≤–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å /start")

def show_get_data_menu(message):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–µ–Ω—é –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö."""
    user_id = message.from_user.id
    if user_id in AUTHORIZED_USERS and AUTHORIZED_USERS[user_id]:
        USER_STATES[user_id] = STATE_GET_DATA
        msg = bot.send_message(user_id, "üì§ –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=GET_DATA_KEYBOARD)
        delete_message(user_id, message.message_id)
    else:
        bot.send_message(user_id, "üö´ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –≤–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å /start")

def show_input_data_menu(message):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–µ–Ω—é –≤–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö."""
    user_id = message.from_user.id
    if user_id in AUTHORIZED_USERS and AUTHORIZED_USERS[user_id]:
        USER_STATES[user_id] = STATE_INPUT_DATA
        msg = bot.send_message(user_id, "üì• –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=INPUT_DATA_KEYBOARD)
        delete_message(user_id, message.message_id)
    else:
        bot.send_message(user_id, "üö´ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –≤–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å /start")

def delete_message(user_id, message_id):
    """–£–¥–∞–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ."""
    try:
        bot.delete_message(user_id, message_id)
    except Exception as e:
        print(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ: {e}")

@bot.message_handler(func=lambda message: message.text == "üì∏ –°–∫—Ä–∏–Ω—à–æ—Ç —ç–∫—Ä–∞–Ω–∞")
def handle_screenshot(message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞."""
    user_id = message.from_user.id

    if user_id in AUTHORIZED_USERS and AUTHORIZED_USERS[user_id]:
        bot.send_chat_action(user_id, 'upload_photo')
        if take_screenshot():
            with open(SCREENSHOT_PATH, 'rb') as photo:
                bot.send_photo(user_id, photo)
        else:
            bot.send_message(user_id, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–¥–µ–ª–∞—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç.")
        delete_message(user_id, message.message_id)
    else:
        bot.send_message(user_id, "üö´ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –≤–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å /start")

@bot.message_handler(func=lambda message: message.text == "‚öôÔ∏è –í—ã–∫–ª—é—á–µ–Ω–∏–µ –ü–ö")
def handle_shutdown(message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å –Ω–∞ –≤—ã–∫–ª—é—á–µ–Ω–∏–µ –ü–ö."""
    user_id = message.from_user.id

    if user_id in AUTHORIZED_USERS and AUTHORIZED_USERS[user_id]:
        bot.send_message(user_id, "üò¥ –í—ã–∫–ª—é—á–∞—é –ü–ö...")
        if shutdown_pc():
            bot.send_message(user_id, "‚úÖ –ü–ö –≤—ã–∫–ª—é—á–µ–Ω")
        else:
            bot.send_message(user_id, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–∫–ª—é—á–∏—Ç—å –ü–ö.")
        delete_message(user_id, message.message_id)
    else:
        bot.send_message(user_id, "üö´ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –≤–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å /start")

@bot.message_handler(func=lambda message: message.text == "üì¢ –í—ã–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è")
def handle_display_message(message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å –Ω–∞ –≤—ã–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ —ç–∫—Ä–∞–Ω."""
    user_id = message.from_user.id

    if user_id in AUTHORIZED_USERS and AUTHORIZED_USERS[user_id]:
        bot.send_message(user_id, "üìù –í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ —ç–∫—Ä–∞–Ω–µ:")
        bot.register_next_step_handler(message, process_display_message)
        delete_message(user_id, message.message_id)
    else:
        bot.send_message(user_id, "üö´ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –≤–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å /start")

def process_display_message(message):
    """–í—ã–≤–æ–¥–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ —ç–∫—Ä–∞–Ω –ü–ö."""
    user_id = message.from_user.id
    text = message.text

    if display_message(text):
        bot.send_message(user_id, "‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–æ –Ω–∞ —ç–∫—Ä–∞–Ω–µ.")
    else:
        bot.send_message(user_id, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ.")

    delete_message(user_id, message.message_id)

@bot.message_handler(func=lambda message: message.text == "üîó –û—Ç–∫—Ä—ã—Ç—å —Å—Å—ã–ª–∫—É")
def handle_open_link(message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å –Ω–∞ –æ—Ç–∫—Ä—ã—Ç–∏–µ —Å—Å—ã–ª–∫–∏."""
    user_id = message.from_user.id

    if user_id in AUTHORIZED_USERS and AUTHORIZED_USERS[user_id]:
        bot.send_message(user_id, "üåê –í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è:")
        bot.register_next_step_handler(message, process_open_link)
        delete_message(user_id, message.message_id)
    else:
        bot.send_message(user_id, "üö´ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –≤–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å /start")

def process_open_link(message):
    """–û—Ç–∫—Ä—ã–≤–∞–µ—Ç —Å—Å—ã–ª–∫—É –≤ –±—Ä–∞—É–∑–µ—Ä–µ –Ω–∞ –ü–ö."""
    user_id = message.from_user.id
    url = message.text

    if open_link(url):
        bot.send_message(user_id, "‚úÖ –°—Å—ã–ª–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∞ –≤ –±—Ä–∞—É–∑–µ—Ä–µ.")
    else:
        bot.send_message(user_id, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å —Å—Å—ã–ª–∫—É.")

    delete_message(user_id, message.message_id)

@bot.message_handler(func=lambda message: message.text == "üíæ –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–∞–π–ª –Ω–∞ –ü–ö")
def handle_upload_file(message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É —Ñ–∞–π–ª–∞ –Ω–∞ –ü–ö –∏ –≤—ã–±–æ—Ä –¥–µ–π—Å—Ç–≤–∏—è."""
    user_id = message.from_user.id

    if user_id in AUTHORIZED_USERS and AUTHORIZED_USERS[user_id]:
        # –°–æ–∑–¥–∞–µ–º Inline Keyboard –¥–ª—è –≤—ã–±–æ—Ä–∞ –¥–µ–π—Å—Ç–≤–∏—è
        markup = telebot.types.InlineKeyboardMarkup()
        item1 = telebot.types.InlineKeyboardButton(text="1. –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–∞–π–ª", callback_data="upload_file")
        item2 = telebot.types.InlineKeyboardButton(text="2. –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å —Ñ–∞–π–ª", callback_data="upload_and_run_file")
        markup.add(item1, item2)
        bot.send_message(user_id, "‚öôÔ∏è –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup)
        delete_message(user_id, message.message_id)
    else:
        bot.send_message(user_id, "üö´ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –≤–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å /start")

@bot.callback_query_handler(func=lambda call: call.data in ["upload_file", "upload_and_run_file"])
def process_upload_choice(call):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä –¥–µ–π—Å—Ç–≤–∏—è (–æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å)."""
    user_id = call.from_user.id
    action = call.data

    bot.send_message(user_id, "üì§ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–∞–π–ª –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞ –ü–ö:")
    bot.register_next_step_handler(call.message, process_upload_file, action)
    delete_message(user_id, call.message.message_id) #–£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –≤—ã–±–æ—Ä–∞

def process_upload_file(message, action):
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ñ–∞–π–ª –Ω–∞ –ü–ö –∏, –≤–æ–∑–º–æ–∂–Ω–æ, –∑–∞–ø—É—Å–∫–∞–µ—Ç –µ–≥–æ."""
    user_id = message.from_user.id
    if message.document:
        try:
            file_info = bot.get_file(message.document.file_id)
            downloaded_file = bot.download_file(file_info.file_path)
            file_name = message.document.file_name
            file_path = os.path.join(FILE_TRANSFER_FOLDER, file_name)

            with open(file_path, 'wb') as new_file:
                new_file.write(downloaded_file)

            bot.send_message(user_id, f"‚úÖ –§–∞–π–ª '{file_name}' —Å–æ—Ö—Ä–∞–Ω–µ–Ω –Ω–∞ –ü–ö.")

            if action == "upload_and_run_file":
                if run_file(file_path):
                    bot.send_message(user_id, "üöÄ –§–∞–π–ª –∑–∞–ø—É—â–µ–Ω.")
                else:
                    bot.send_message(user_id, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å —Ñ–∞–π–ª.")
                delete_message(user_id, message.message_id)  # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞
            else:
                delete_message(user_id, message.message_id)  #–£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –µ—Å–ª–∏ –Ω–µ –Ω–∞–¥–æ –∑–∞–ø—É—Å–∫–∞—Ç—å —Ñ–∞–π–ª

        except Exception as e:
            bot.send_message(user_id, f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ñ–∞–π–ª: {e}")
            delete_message(user_id, message.message_id)  # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
    else:
        bot.send_message(user_id, "‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–∞–π–ª –∫–∞–∫ –¥–æ–∫—É–º–µ–Ω—Ç.")
        delete_message(user_id, message.message_id)  # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ–º@bot.message_handler(func=lambda message: message.text == "üñºÔ∏è –í—ã–≤–µ—Å—Ç–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ", content_types=['photo'])
def handle_display_photo_request(message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–í—ã–≤–µ—Å—Ç–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ"."""
    user_id = message.from_user.id

    if user_id in AUTHORIZED_USERS and AUTHORIZED_USERS[user_id]:
        bot.send_message(user_id, "üì∏ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è.")
        bot.register_next_step_handler(message, process_display_photo)  # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É - –æ–∂–∏–¥–∞–Ω–∏—é —Ñ–æ—Ç–æ
        delete_message(user_id, message.message_id)
    else:
        bot.send_message(user_id, "üö´ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –≤–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å /start")

@bot.message_handler(content_types=['photo'])  # –≠—Ç–æ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Ç–æ–ª—å–∫–æ —Ñ–æ—Ç–æ
def process_display_photo(message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø–æ–ª—É—á–µ–Ω–Ω—É—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –µ–µ –Ω–∞ —ç–∫—Ä–∞–Ω–µ."""
    user_id = message.from_user.id

    if user_id in AUTHORIZED_USERS and AUTHORIZED_USERS[user_id]:
        try:
            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
            file_id = message.photo[-1].file_id
            file_info = bot.get_file(file_id)
            downloaded_file = bot.download_file(file_info.file_path)

            # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–∞ —ç–∫—Ä–∞–Ω–µ
            if display_image(downloaded_file):
                bot.send_message(user_id, "‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–æ –Ω–∞ —ç–∫—Ä–∞–Ω–µ –Ω–∞ 5 —Å–µ–∫—É–Ω–¥.")
            else:
                bot.send_message(user_id, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ.")
        except Exception as e:
            bot.send_message(user_id, f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {e}")
    else:
        bot.send_message(user_id, "üö´ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –≤–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å /start")

    delete_message(user_id, message.message_id)

@bot.message_handler(func=lambda message: message.text == "üì§ –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–∞–π–ª —Å –ü–ö")
def handle_send_file(message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É —Ñ–∞–π–ª–∞ —Å –ü–ö."""
    user_id = message.from_user.id

    if user_id in AUTHORIZED_USERS and AUTHORIZED_USERS[user_id]:
        # –°–æ–∑–¥–∞–µ–º Inline Keyboard —Å –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏ —Ñ–∞–π–ª–æ–≤
        markup = telebot.types.InlineKeyboardMarkup()
        files = [f for f in os.listdir(FILE_SEND_FOLDER) if os.path.isfile(os.path.join(FILE_SEND_FOLDER, f))]
        for file in files:
            markup.add(telebot.types.InlineKeyboardButton(text=file, callback_data=f"send_file:{file}"))  # –î–æ–±–∞–≤–ª—è–µ–º callback_data

        bot.send_message(user_id, "üóÇÔ∏è –í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏:", reply_markup=markup)
        delete_message(user_id, message.message_id)
    else:
        bot.send_message(user_id, "üö´ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –≤–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å /start")

@bot.callback_query_handler(func=lambda call: call.data.startswith("send_file:"))
def callback_send_file(call):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä —Ñ–∞–π–ª–∞ –∏–∑ Inline Keyboard."""
    user_id = call.from_user.id
    file_name = call.data.split(":")[1]  # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–º—è —Ñ–∞–π–ª–∞ –∏–∑ callback_data
    file_path = os.path.join(FILE_SEND_FOLDER, file_name)

    try:
        with open(file_path, 'rb') as file:
            bot.send_document(user_id, file)
        bot.send_message(user_id, "‚úÖ –§–∞–π–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω.")
    except Exception as e:
        bot.send_message(user_id, f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–∞–π–ª: {e}")

    delete_message(user_id, call.message.message_id) #–£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π

@bot.message_handler(func=lambda message: message.text == "üóÇÔ∏è –ö–∞—Ç–µ–≥–æ—Ä–∏–∏")
def handle_categories(message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–∫–∞–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–π."""
    user_id = message.from_user.id
    if user_id in AUTHORIZED_USERS and AUTHORIZED_USERS[user_id]:
        show_categories_menu(message)
    else:
        bot.send_message(user_id, "üö´ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –≤–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å /start")

@bot.message_handler(func=lambda message: message.text == "üì§ –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö")
def handle_get_data(message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–∫–∞–∑ –º–µ–Ω—é –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö."""
    user_id = message.from_user.id
    if user_id in AUTHORIZED_USERS and AUTHORIZED_USERS[user_id]:
        show_get_data_menu(message)
    else:
        bot.send_message(user_id, "üö´ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –≤–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å /start")

@bot.message_handler(func=lambda message: message.text == "üì• –í–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö")
def handle_input_data(message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–∫–∞–∑ –º–µ–Ω—é –≤–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö."""
    user_id = message.from_user.id
    if user_id in AUTHORIZED_USERS and AUTHORIZED_USERS[user_id]:
        show_input_data_menu(message)
    else:
        bot.send_message(user_id, "üö´ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –≤–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å /start")

@bot.message_handler(func=lambda message: message.text == "üîô –ù–∞–∑–∞–¥")
def handle_back(message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"."""
    user_id = message.from_user.id
    if user_id in AUTHORIZED_USERS and AUTHORIZED_USERS[user_id]:
        current_state = USER_STATES.get(user_id)

        if current_state == STATE_CATEGORIES or current_state == STATE_MAIN_MENU:
            show_main_menu(message)
        elif current_state == STATE_GET_DATA or current_state == STATE_INPUT_DATA:
            show_categories_menu(message)
        else:
            show_main_menu(message)
    else:
        bot.send_message(user_id, "üö´ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –≤–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å /start")

@bot.message_handler(func=lambda message: True)
def echo_all(message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è."""
    user_id = message.from_user.id
    if user_id in AUTHORIZED_USERS and AUTHORIZED_USERS[user_id]:
        bot.reply_to(message, "‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞.  –í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –∏–∑ –º–µ–Ω—é.")
        delete_message(user_id, message.message_id)
    else:
        bot.send_message(user_id, "üö´ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –≤–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å /start")

# --- –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ ---
if __name__ == '__main__':
    print("–†–∞–±–æ—Ç–∞–µ–º...")
    bot.infinity_polling()